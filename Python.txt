Python中比较典型的结构：
1、[x ** 2 for x in range(10) if x % 2 ==0]
2、list(map((lambda x: x**2), filter((lambda x: x % 2 == 0), range(10))))
	#这个和上面一个效果一样，但是明显上面效率高
3、list(filter((lambda x: x % 2 == 0), range(5)))
4、def myreduce(function, sequence):
	tally = sequence[0]
	for next in sequence[1:]:
		tally = function(tally, next)
	return tally
  myreduce((lambda x, y: x + y), [1, 2, 3, 4, 5])	#模拟reduce函数实现
 
5、res = [x +y for x in [0, 1, 2] for y in [100, 200, 300]] #嵌套循环
6、listoftuple = [("bob", 35, "mgr"), ("mel", 40, "dev")]
	[age for (name,age, job) in listoftuple]
	list(map(lambda row: row[1], listoftuple))
7、[x ** 2 for x in range(4)] #（普通迭代）
	x ** 2 for x in range(4)) #（生成器）
8、sorted(x ** 2 for x in range(4)) # 基本排序函数
9、list(zip([1, 3, 5], [2, 4, 6])) #好用的ZIP函数
10、def mymap(func, *seqs):
		res = []
		for args in zip(*seqs):
			res.append(func(*args))
		return res
	print(mymap(pow, [1, 2, 3],[2, 3, 4, 5]))

11、{x: x * x for x in range(10) if x % 2 == 0}
12、
























































































